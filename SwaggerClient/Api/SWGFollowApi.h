#import <Foundation/Foundation.h>
#import "SWGAddFollow.h"
#import "SWGDefaultApiResponse.h"
#import "SWGFollowIdListApiResponse.h"
#import "SWGPageFollowApiResponse.h"
#import "SWGApi.h"

/**
* 领商-对外开放服务API
* 提供领商对外开放服务所有Restful接口
*
* OpenAPI spec version: 1.0.0
* Contact: ys@ibizplus.cn
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGFollowApi: NSObject <SWGApi>

extern NSString* kSWGFollowApiErrorDomain;
extern NSInteger kSWGFollowApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 添加关注
/// 
///
/// @param username 用户名
/// @param addFollow 订单内容
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGDefaultApiResponse*
-(NSURLSessionTask*) addFollowUsingPOSTWithUsername: (NSString*) username
    addFollow: (SWGAddFollow*) addFollow
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGDefaultApiResponse* output, NSError* error)) handler;


/// 取消关注
/// 
///
/// @param username 用户名
/// @param _id 关注ID
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGDefaultApiResponse*
-(NSURLSessionTask*) cancelFollowUsingDELETEWithUsername: (NSString*) username
    _id: (NSString*) _id
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGDefaultApiResponse* output, NSError* error)) handler;


/// 查询线索关注ID
/// 
///
/// @param username 用户名
/// @param clueIds 线索ID(多个ID逗号分割)
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGFollowIdListApiResponse*
-(NSURLSessionTask*) getClueFollowIdsUsingGETWithUsername: (NSString*) username
    clueIds: (NSString*) clueIds
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGFollowIdListApiResponse* output, NSError* error)) handler;


/// 查询企业关注ID
/// 
///
/// @param username 用户名
/// @param companyIds 企业ID(多个ID逗号分割)
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGFollowIdListApiResponse*
-(NSURLSessionTask*) getCompanyFollowIdsUsingGETWithUsername: (NSString*) username
    companyIds: (NSString*) companyIds
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGFollowIdListApiResponse* output, NSError* error)) handler;


/// 关注分页列表
/// 
///
/// @param username 用户名
/// @param pageNumber 页数
/// @param pageSize 每页条数
/// @param loginToken 登录令牌 (optional)
/// @param type 类型(company企业、clue线索) (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPageFollowApiResponse*
-(NSURLSessionTask*) getPageListUsingGETWithUsername: (NSString*) username
    pageNumber: (NSNumber*) pageNumber
    pageSize: (NSNumber*) pageSize
    loginToken: (NSString*) loginToken
    type: (NSString*) type
    completionHandler: (void (^)(SWGPageFollowApiResponse* output, NSError* error)) handler;



@end

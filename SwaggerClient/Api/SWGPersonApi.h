#import <Foundation/Foundation.h>
#import "SWGAddPersonSchool.h"
#import "SWGAddPersonWork.h"
#import "SWGDefaultApiResponse.h"
#import "SWGModifyPerson.h"
#import "SWGModifyPersonSchool.h"
#import "SWGModifyPersonWork.h"
#import "SWGPagePersonApiResponse.h"
#import "SWGPersonApiResponse.h"
#import "SWGPersonDetailApiResponse.h"
#import "SWGPersonListApiResponse.h"
#import "SWGPersonSchoolListApiResponse.h"
#import "SWGPersonWorkListApiResponse.h"
#import "SWGApi.h"

/**
* 领商-对外开放服务API
* 提供领商对外开放服务所有Restful接口
*
* OpenAPI spec version: 1.0.0
* Contact: ys@ibizplus.cn
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGPersonApi: NSObject <SWGApi>

extern NSString* kSWGPersonApiErrorDomain;
extern NSInteger kSWGPersonApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 新增我的人员学校信息
/// 
///
/// @param username 用户名
/// @param addPersonSchool 新增内容
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGDefaultApiResponse*
-(NSURLSessionTask*) addMyPersonSchoolUsingPOSTWithUsername: (NSString*) username
    addPersonSchool: (SWGAddPersonSchool*) addPersonSchool
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGDefaultApiResponse* output, NSError* error)) handler;


/// 新增我的人员学校信息
/// 
///
/// @param username 用户名
/// @param addPersonWork 新增内容
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGDefaultApiResponse*
-(NSURLSessionTask*) addMyPersonWorkUsingPOSTWithUsername: (NSString*) username
    addPersonWork: (SWGAddPersonWork*) addPersonWork
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGDefaultApiResponse* output, NSError* error)) handler;


/// 人员详情
/// 
///
/// @param _id 人员ID
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPersonDetailApiResponse*
-(NSURLSessionTask*) detailUsingGET1WithId: (NSString*) _id
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGPersonDetailApiResponse* output, NSError* error)) handler;


/// 获取公司前员工人员列表
/// 
///
/// @param companyId 公司ID
/// @param pageNumber 页数
/// @param pageSize 数量
/// @param loginToken 登录令牌 (optional)
/// @param keyword 关键字 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPagePersonApiResponse*
-(NSURLSessionTask*) getCompanyFormerPersonListUsingGETWithCompanyId: (NSString*) companyId
    pageNumber: (NSNumber*) pageNumber
    pageSize: (NSNumber*) pageSize
    loginToken: (NSString*) loginToken
    keyword: (NSString*) keyword
    completionHandler: (void (^)(SWGPagePersonApiResponse* output, NSError* error)) handler;


/// 获取公司人员列表
/// 
///
/// @param companyId 公司ID
/// @param pageNumber 页数
/// @param pageSize 数量
/// @param loginToken 登录令牌 (optional)
/// @param keyword 关键字 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPagePersonApiResponse*
-(NSURLSessionTask*) getCompanyPersonListUsingGETWithCompanyId: (NSString*) companyId
    pageNumber: (NSNumber*) pageNumber
    pageSize: (NSNumber*) pageSize
    loginToken: (NSString*) loginToken
    keyword: (NSString*) keyword
    completionHandler: (void (^)(SWGPagePersonApiResponse* output, NSError* error)) handler;


/// 获取我的公司前员工人员列表
/// 
///
/// @param username 用户名
/// @param companyId 公司ID
/// @param pageNumber 页数
/// @param pageSize 数量
/// @param loginToken 登录令牌 (optional)
/// @param cardboxExist 名片盒存在 (optional)
/// @param keyword 关键字 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPagePersonApiResponse*
-(NSURLSessionTask*) getMyCompanyFormerPersonListUsingGETWithUsername: (NSString*) username
    companyId: (NSString*) companyId
    pageNumber: (NSNumber*) pageNumber
    pageSize: (NSNumber*) pageSize
    loginToken: (NSString*) loginToken
    cardboxExist: (NSNumber*) cardboxExist
    keyword: (NSString*) keyword
    completionHandler: (void (^)(SWGPagePersonApiResponse* output, NSError* error)) handler;


/// 获取我的公司人员列表
/// 
///
/// @param username 用户名
/// @param companyId 公司ID
/// @param pageNumber 页数
/// @param pageSize 数量
/// @param loginToken 登录令牌 (optional)
/// @param cardboxExist 名片盒存在 (optional)
/// @param keyword 关键字 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPagePersonApiResponse*
-(NSURLSessionTask*) getMyCompanyPersonListUsingGETWithUsername: (NSString*) username
    companyId: (NSString*) companyId
    pageNumber: (NSNumber*) pageNumber
    pageSize: (NSNumber*) pageSize
    loginToken: (NSString*) loginToken
    cardboxExist: (NSNumber*) cardboxExist
    keyword: (NSString*) keyword
    completionHandler: (void (^)(SWGPagePersonApiResponse* output, NSError* error)) handler;


/// 批量查询我的人员
/// 
///
/// @param username 用户名
/// @param ids 人员ID(多个ID用逗号分割)
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPersonListApiResponse*
-(NSURLSessionTask*) getMyPersonListByIdsUsingGETWithUsername: (NSString*) username
    ids: (NSString*) ids
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGPersonListApiResponse* output, NSError* error)) handler;


/// 获取我的人员学校列表
/// 
///
/// @param username 用户名
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPersonSchoolListApiResponse*
-(NSURLSessionTask*) getMyPersonSchoolListUsingGETWithUsername: (NSString*) username
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGPersonSchoolListApiResponse* output, NSError* error)) handler;


/// 获取我的人员信息
/// 
///
/// @param username 用户名
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPersonApiResponse*
-(NSURLSessionTask*) getMyPersonUsingGETWithUsername: (NSString*) username
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGPersonApiResponse* output, NSError* error)) handler;


/// 获取我的人员学校列表
/// 
///
/// @param username 用户名
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPersonWorkListApiResponse*
-(NSURLSessionTask*) getMyPersonWorkListUsingGETWithUsername: (NSString*) username
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGPersonWorkListApiResponse* output, NSError* error)) handler;


/// 批量查询人员
/// 
///
/// @param ids 人员ID(多个ID用逗号分割)
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPersonListApiResponse*
-(NSURLSessionTask*) getPersonListByIdsUsingGETWithIds: (NSString*) ids
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGPersonListApiResponse* output, NSError* error)) handler;


/// 修改我的人员学校信息
/// 
///
/// @param username 用户名
/// @param modifyPersonSchool 修改内容
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGDefaultApiResponse*
-(NSURLSessionTask*) modifyMyPersonSchoolUsingPUTWithUsername: (NSString*) username
    modifyPersonSchool: (SWGModifyPersonSchool*) modifyPersonSchool
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGDefaultApiResponse* output, NSError* error)) handler;


/// 修改我的人员信息
/// 
///
/// @param username 用户名
/// @param body 修改内容
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPersonApiResponse*
-(NSURLSessionTask*) modifyMyPersonUsingPUTWithUsername: (NSString*) username
    body: (SWGModifyPerson*) body
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGPersonApiResponse* output, NSError* error)) handler;


/// 修改我的人员工作经历
/// 
///
/// @param username 用户名
/// @param modifyPersonWork 修改内容
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGDefaultApiResponse*
-(NSURLSessionTask*) modifyMyPersonWorkUsingPUTWithUsername: (NSString*) username
    modifyPersonWork: (SWGModifyPersonWork*) modifyPersonWork
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGDefaultApiResponse* output, NSError* error)) handler;


/// 我的人员详情
/// 
///
/// @param username 用户名
/// @param _id 人员ID
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPersonDetailApiResponse*
-(NSURLSessionTask*) mydetailUsingGET1WithUsername: (NSString*) username
    _id: (NSString*) _id
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGPersonDetailApiResponse* output, NSError* error)) handler;


/// 删除我的人员学校
/// 
///
/// @param username 用户名
/// @param _id 学校ID
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGDefaultApiResponse*
-(NSURLSessionTask*) removeMyPersonSchoolUsingDELETEWithUsername: (NSString*) username
    _id: (NSString*) _id
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGDefaultApiResponse* output, NSError* error)) handler;


/// 删除我的人员工作经历
/// 
///
/// @param username 用户名
/// @param _id 工作经历ID
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGDefaultApiResponse*
-(NSURLSessionTask*) removeMyPersonWorkUsingDELETEWithUsername: (NSString*) username
    _id: (NSString*) _id
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGDefaultApiResponse* output, NSError* error)) handler;



@end

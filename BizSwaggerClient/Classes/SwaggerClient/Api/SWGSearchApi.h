#import <Foundation/Foundation.h>
#import "SWGAutoCompleteApiResponse.h"
#import "SWGPageCompanyAndClueApiResponse.h"
#import "SWGApi.h"

/**
* 领商-对外开放服务API
* 提供领商对外开放服务所有Restful接口
*
* OpenAPI spec version: 1.0.0
* Contact: ys@ibizplus.cn
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGSearchApi: NSObject <SWGApi>

extern NSString* kSWGSearchApiErrorDomain;
extern NSInteger kSWGSearchApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 公司线索下拉提示
/// 
///
/// @param name 产品名称
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGAutoCompleteApiResponse*
-(NSURLSessionTask*) getCompanyClueAutoCompleteUsingGETWithName: (NSString*) name
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGAutoCompleteApiResponse* output, NSError* error)) handler;


/// 产品搜索下拉提示
/// 
///
/// @param name 产品名称
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGAutoCompleteApiResponse*
-(NSURLSessionTask*) getProductAutoCompleteUsingGET1WithName: (NSString*) name
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGAutoCompleteApiResponse* output, NSError* error)) handler;


/// 搜索线索
/// 
///
/// @param pageNumber 页数
/// @param pageSize 数量
/// @param loginToken 登录令牌 (optional)
/// @param type 线索类型 (optional)
/// @param name 线索名称 (optional)
/// @param identityAuthStatus 认证状态 (optional)
/// @param zoneCode 地区代码 (optional)
/// @param companyId 公司ID (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPageCompanyAndClueApiResponse*
-(NSURLSessionTask*) searchClueUsingGETWithPageNumber: (NSNumber*) pageNumber
    pageSize: (NSNumber*) pageSize
    loginToken: (NSString*) loginToken
    type: (NSString*) type
    name: (NSString*) name
    identityAuthStatus: (NSString*) identityAuthStatus
    zoneCode: (NSString*) zoneCode
    companyId: (NSString*) companyId
    completionHandler: (void (^)(SWGPageCompanyAndClueApiResponse* output, NSError* error)) handler;


/// 搜索公司和线索
/// 
///
/// @param pageNumber 页数
/// @param pageSize 数量
/// @param loginToken 登录令牌 (optional)
/// @param keyword 关键字 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPageCompanyAndClueApiResponse*
-(NSURLSessionTask*) searchCompanyAndClueUsingGETWithPageNumber: (NSNumber*) pageNumber
    pageSize: (NSNumber*) pageSize
    loginToken: (NSString*) loginToken
    keyword: (NSString*) keyword
    completionHandler: (void (^)(SWGPageCompanyAndClueApiResponse* output, NSError* error)) handler;


/// 搜索公司
/// 
///
/// @param name The company name
/// @param pageNumber The page number
/// @param pageSize The page size
/// @param loginToken 登录令牌 (optional)
/// @param industryCode The industry code (optional)
/// @param zoneCode The zone code (optional)
/// @param revenue The revenue (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPageCompanyAndClueApiResponse*
-(NSURLSessionTask*) searchCompanyUsingGETWithName: (NSString*) name
    pageNumber: (NSNumber*) pageNumber
    pageSize: (NSNumber*) pageSize
    loginToken: (NSString*) loginToken
    industryCode: (NSString*) industryCode
    zoneCode: (NSString*) zoneCode
    revenue: (NSString*) revenue
    completionHandler: (void (^)(SWGPageCompanyAndClueApiResponse* output, NSError* error)) handler;



@end

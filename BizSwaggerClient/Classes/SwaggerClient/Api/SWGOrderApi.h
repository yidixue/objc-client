#import <Foundation/Foundation.h>
#import "SWGCreateOrder.h"
#import "SWGDefaultApiResponse.h"
#import "SWGOrderApiResponse.h"
#import "SWGOrderInvoice.h"
#import "SWGOrderInvoiceApiResponse.h"
#import "SWGPageOrderApiResponse.h"
#import "SWGPriceApiResponse.h"
#import "SWGApi.h"

/**
* 领商-对外开放服务API
* 提供领商对外开放服务所有Restful接口
*
* OpenAPI spec version: 1.0.0
* Contact: ys@ibizplus.cn
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGOrderApi: NSObject <SWGApi>

extern NSString* kSWGOrderApiErrorDomain;
extern NSInteger kSWGOrderApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 开具发票
/// 
///
/// @param username 用户名
/// @param body 发票信息
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGDefaultApiResponse*
-(NSURLSessionTask*) createInvoiceUsingPOSTWithUsername: (NSString*) username
    body: (SWGOrderInvoice*) body
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGDefaultApiResponse* output, NSError* error)) handler;


/// 创建订单
/// 
///
/// @param username 用户名
/// @param createOrder 订单内容
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGOrderApiResponse*
-(NSURLSessionTask*) createOrderUsingPOSTWithUsername: (NSString*) username
    createOrder: (SWGCreateOrder*) createOrder
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGOrderApiResponse* output, NSError* error)) handler;


/// 查询开票信息
/// 
///
/// @param username 用户名
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGOrderInvoiceApiResponse*
-(NSURLSessionTask*) getInvoiceByUsernameUsingGETWithUsername: (NSString*) username
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGOrderInvoiceApiResponse* output, NSError* error)) handler;


/// 根据id查询订单信息
/// 
///
/// @param username 用户名
/// @param _id 订单编号
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Order not found"
///
/// @return SWGOrderApiResponse*
-(NSURLSessionTask*) getOrderByIdUsingGETWithUsername: (NSString*) username
    _id: (NSString*) _id
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGOrderApiResponse* output, NSError* error)) handler;


/// 订单分页列表
/// 
///
/// @param username 用户名
/// @param pageNumber 页数
/// @param pageSize 每页条数
/// @param loginToken 登录令牌 (optional)
/// @param type 类型(1月会员 2年会员 3财务报告) (optional)
/// @param invoiceStatus 发票状态(UNBILLED未开票 SUBMITTED已提交 INVOICED已开票) (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Order not found"
///
/// @return SWGPageOrderApiResponse*
-(NSURLSessionTask*) getPageListUsingGET1WithUsername: (NSString*) username
    pageNumber: (NSNumber*) pageNumber
    pageSize: (NSNumber*) pageSize
    loginToken: (NSString*) loginToken
    type: (NSString*) type
    invoiceStatus: (NSString*) invoiceStatus
    completionHandler: (void (^)(SWGPageOrderApiResponse* output, NSError* error)) handler;


/// 查询订单价格
/// 
///
/// @param username 用户名
/// @param type 订单类型(1月会员 2年会员 3财务报告)
/// @param loginToken 登录令牌 (optional)
/// 
///  code:200 message:"successful operation",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPriceApiResponse*
-(NSURLSessionTask*) getPriceUsingGETWithUsername: (NSString*) username
    type: (NSString*) type
    loginToken: (NSString*) loginToken
    completionHandler: (void (^)(SWGPriceApiResponse* output, NSError* error)) handler;



@end
